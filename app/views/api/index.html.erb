<style>
 table th.content, table td.content {
     width: 100%;
 }
</style>

<div class="row">
    <div class="col-md-10">
	<h1>LittleSis Api Documentation - Version 2</h1>
	<div class="well">
	    <p>This is the documentation for version 2 of the API, which is in active development and SUBJECT TO CHANGE.</p>
	</div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
	<h2>Signup and Authorization</h2>
	<p>In order to use the LittleSis API you must have an  Api Token. You can get an Api Token from your LittleSis account settings page. If you don't yet have a LittleSis account, <%= link_to "go here to create one", new_user_registration_path %>. If you already have an account, access your settings page by either <%= link_to "following this link", edit_user_registration_path %> or by clicking on your name in the navigation bar and going to 'settings'. On that page you will be able to generate an Api Token or view your current token. </p>
	
	<p>Authorization is accomplished by including the http header <code>Littlesis-Api-Token</code> to each request.</p>
    </div>
    
    <div class="col-md-12">
	    <p>Example:</p>
	    <pre><code>
curl -H 'Littlesis-Api-Token: RhS3mQneriAaym4pNjdjw' https://littlesis.org/api/entities/1
	    </code></pre>
	    <p>For brevity's sake, other examples in this document may omit the authorization header, but it is required for every request. The API will return status code 401 if you forget to include the Littlesis-Api-Token header and will return state code 403 if the token is invalid</p>
    </div>
</div>
    
<div class="row">
    <div class="col-md-12">
	<h2>Responses</h2>
	<p>The API follows many of the conventions of <%= link_to 'JSON API', 'http://jsonapi.org/' %>, but does not implement the entire specification.</p>
	<p>All responses are in JSON.</p>
    </div>
    <div class="col-md-8">
	<h3>Successful Responses</h3>
	<p>For singular resources, this will return an object with two fields: data and meta. The meta object contains copyright, license, api version, and other similar information. The data object will have four fields: <em>type</em>, <em>id</em>, <em>attributes</em>, and <em>links</em>. </p>
	<p><em>Type</em> is the type of resource requested: (i.e. entities). <em>Id</em> is the resource's id. <em>Attributes</em> contain the resource attributes. <em>Links</em> contain at least one link to LittleSis where the resource can be viewed.</p>
	<p><strong>Structure of response:</strong></p>
	<pre><code>
{
  data: {
          type: 'resourceType'
          id: '123'
          attributes: { ... }
          links: { 
            self: '/link/to/resource'
          }
        },
   meta: { ... }
}
	</code></pre>

	<p>All sucuessful responses will return status code <code>200</code></p>
    </div>

    <div class="col-md-12">
	<h3>Errors</h3>
	<p>If an error occurs, the API will return json containing information about the error along with an error status code. </p>
	<h4>Structure of an error response: </h4>
	<pre><code>
{
  errors: [ {title: 'Details here about the error'} ],
  meta: { ... }
}
	</code></pre>
    </div>
    
    <div class="col-md-12">
	<h4>Error Status Codes</h4>
	<table class="table">
	    <thead>
		<tr>
		    <th>Status Code</th>
		    <th class="content">Meaning</th>
		</tr>
	    </thead>
	    <tbody>
		<tr>
		    <td>401</td>
		    <td class="content">Missing Authorization Header</td>
		</tr>
		<tr>
		    <td>403</td>
		    <td class="content">Invalid Authorization Header</td>
		</tr>
		<tr>
		    <td>404</td>
		    <td class="content">Resource is missing or never existed</td>
		</tr>
		<tr>
		    <td>410</td>
		    <td class="content">Resource has been deleted (but once existed)</td>
		</tr>
		
	    </tbody>
	</table>
    </div>
</div>


<div class="row">
    <div class="col-md-12">
	<h2>Entity Resources</h2>
    </div>

    <div class="col-md-12">
	<h3><code>/api/entities/:id</code></h3>
	<p>This provides basic information about an entity: </p>
	<ul>
	    <%= attribute_line('name', 'The primary alias (not necessarily unique) of the Entity in LittleSis') %>
	    <%= attribute_line('blurb', 'A short phrase or sentence describing the Entity') %>
	    <%= attribute_line('primary_ext', '"Person" or "Org"') %>
	    <%= attribute_line('summary', 'A longer bio or summary of the Entity') %>
	    <%= attribute_line('website', "The Entity's website") %>
	    <%= attribute_line('start_date', "The date when the Entity came to exist -- DOB for people, founding dates for orgs") %>
	    <%= attribute_line('end_date', "The date, if any, when the Entity ceased to exist") %>
	    <%= attribute_line('parent_id', "If the Entity is a sub-organization of a parent Entity, the parent's id is stored here") %>
	    <%= attribute_line('updated_at', 'The last time the Entity data was updated') %>
	    <%= attribute_line('types', 'An array of types (also known as extensions) associated with the entity. i.e. Business, Lawyer') %>
	    <%= attribute_line('aliases', 'An array of other names the entity is known as') %>
	</ul>
    </div>

    <div class="col-md-12">
	<p>To include additional information contained within the extensions, set the url query parameter <code>details=TRUE</code></p>
	<p>example: <pre><code>curl https://littlesis.org/api/entities/1?details=TRUE </code></pre></p>
	<p>However, this will not contain useful information for every entity as some extensions do have additional fields.</p>
    </div>

    <div class="col-md-12">
	<h3>Entity Extensions</h3>
	<h3><code>/api/entities/:id/extensions</code></h3>
	<p>Extensions are also known as types. All entities have at least one type -- <em>Organization</em> or <em>Person</em>. Other types include: Business Person, Public Company, Political Candidate, and Professional Associations.</p>

	<p>Example request: <code>curl https://littlesis.org/api/entities/1/extensions</code></p>
	<pre><code>
{
  "data": [
    {
      "type": "extension-records",
      "id": 1,
      "attributes": {
        "definition_id": 2,
        "display_name": "Organization",
        "name": "Org"
      }
    },
    {
      "type": "extension-records",
      "id": 2,
      "attributes": {
        "definition_id": 5,
        "display_name": "Business",
        "name": "Business"
      }
    },
    {
      "type": "extension-records",
      "id": 3,
      "attributes": {
        "definition_id": 13,
        "display_name": "Public Company",
        "name": "PublicCompany"
      }
    }
  ],
  "meta": {...}
}
	</code></pre>
    </div>

</div>
